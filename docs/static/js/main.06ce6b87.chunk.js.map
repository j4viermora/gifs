{"version":3,"sources":["componets/AddCategory.js","helpers/GetGif.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFechtGfs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protTypes","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","title","id","GifGridItem","className","src","alt","GifGrid","loading","setImages","useEffect","setTimeout","then","useFetchGifs","imagenes","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mLAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACA,sBAAMC,SAZqB,SAACC,GACxBA,EAAEC,iBAGEJ,EAAWK,KAAKC,OAAS,IACzBR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAe,MAMvB,SACM,uBACDO,KAAK,OACLC,MAAQT,EACRU,SApBsB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,UAAY,CACpBd,Y,OAAce,EAAUC,KAAKC,Y,2BCnCpBC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UACpDH,GAFkB,+DAKDI,MAAMF,GALL,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLR,IAAG,UAAEQ,EAAIC,cAAN,aAAE,EAAYC,iBAAiBV,IAClCW,MAAOH,EAAIG,MACXC,GAAIJ,EAAII,OAZQ,kBAebN,GAfa,4CAAH,sDCENO,EAAc,SAAC,GAAmB,IAAjBF,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IACjC,OACI,sBAAKc,UAAU,qBAAf,UACI,6BAAMH,IACN,qBAAKI,IAAKf,EAAKgB,IAAG,iBCFjBC,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACflB,mBAAS,CAChCyB,KAAM,GACNa,SAAS,IAH6B,mBACjCV,EADiC,KAC5BW,EAD4B,KAgBxC,OAVAC,qBAAU,WACRC,YAAW,WACTxB,EAAOC,GAAUwB,MAAK,SAACd,GAAD,OACpBW,EAAU,CACRd,KAAMG,EACNU,SAAS,YAId,CAACpB,IACGU,EDd6Be,CAAazB,GAAnC0B,EADyB,EAC/BnB,KAAgBa,EADe,EACfA,QAExB,OACE,qCACE,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SACGU,EAASjB,KAAI,gBAAGK,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOX,EAAd,EAAcA,IAAd,OACZ,cAAC,EAAD,CAAsBW,MAAOA,EAAOX,IAAKA,GAAvBY,YE4Bba,EAjCM,WAAO,IAAD,EACW7C,mBAAS,CAC3C,cAFuB,mBAClB8C,EADkB,KACNC,EADM,KAWzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAahD,YAAegD,IAC5B,uBACD,mCAGKD,EAAWnB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAE1BA,SAAaA,GADLA,Y,MCvBpB8B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.06ce6b87.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n   \r\n    const [inputValue, setInputValue] = useState('')\r\n    const handlerInputChange = (e) => {\r\n        setInputValue(e.target.value) \r\n    }\r\n   \r\n    const handlerInputSubmit = (e) => {\r\n        e.preventDefault()\r\n       \r\n       \r\n        if( inputValue.trim.length < 2 ){\r\n            setCategory( cats => [inputValue, ...cats])\r\n            setInputValue( '' )\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n    <form onSubmit= { handlerInputSubmit }>\r\n          <input \r\n         type='text' \r\n         value={ inputValue }\r\n         onChange={ handlerInputChange }\r\n         />\r\n    </form>\r\n      \r\n  \r\n    )\r\n}\r\n\r\nAddCategory.protTypes = {\r\n    setCategory : PropTypes.func.isRequired,\r\n}","export const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=GIXf7Z6VL6dQpCZpcAjnbhOzqVGRxbHg`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      url: img.images?.downsized_medium.url,\r\n      title: img.title,\r\n      id: img.id,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__flip\">\r\n            <h2>{ title }</h2>\r\n            <img src={url} alt={`imagenes`} ></img>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFechtGfs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: imagenes, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {imagenes.map(({ id, title, url }) => (\r\n          <GifGridItem key={id} title={title} url={url} />\r\n        ))}\r\n\r\n        {\r\n          // imagenes.map( ({ id, title } = imagenes ) => (\r\n          //     <li key = { id } >\r\n          //         { title }\r\n          //     </li>\r\n          // ) )\r\n        }\r\n\r\n        {/* { imagenes.map( imgInfo => (\r\n                <li key = { imgInfo.id }>\r\n                   {imgInfo.title} \r\n                </li>\r\n            )  )      } */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGif } from \"../helpers/GetGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [img, setImages] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getGif(category).then((img) =>\r\n        setImages({\r\n          data: img,\r\n          loading: false,\r\n        })\r\n      );\r\n    });\r\n  }, [category]);\r\n  return img;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./componets/AddCategory\";\r\nimport { GifGrid } from \"./componets/GifGrid\";\r\n\r\n//import ReactDOM from 'react-dom';\r\n\r\n//const categories = ['suspenso', 'aventura', 'comedia']\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n    \"One Punch\"\r\n  ]);\r\n\r\n  // const handerAdd = () => {\r\n  //    // setCategories( [...categories, newCategory] )\r\n  //    setCategories(cats => [...cats, newCategory])\r\n\r\n  //}\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategory = {setCategories} />\r\n      <hr></hr>\r\n     <>\r\n     \r\n      {\r\n          categories.map( category => <GifGrid \r\n            key = { category }\r\n            category = { category }/> )\r\n      }\r\n\r\n     \r\n     </>\r\n     \r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(\n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);"],"sourceRoot":""}